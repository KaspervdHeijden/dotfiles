#!/usr/bin/env sh

if [ ! -x "$(command -v gsettings)" ]; then
    echo 'Binary not found: gsettings' >&2;
    exit 2;
fi

wallpaper_dirs='';
random_mode=0;
timeout=300;

while getopts ':rd:t:' arg; do
    case "${arg}" in
        d) [ -d "${OPTARG}" ] && wallpaper_dirs="${wallpaper_dirs} ${OPTARG}"; ;;
        t) timeout="${OPTARG}"       ;;
        r) random_mode=1             ;;
    esac;
done

if [ -z "${wallpaper_dirs}" ]; then
    echo 'No valid directories given' >&2;
    exit 3;
fi

[ "${timeout}" -lt 30 ] && timeout=30;

while true; do
    sleep "${timeout}";

    cur_image=$(gsettings get org.gnome.desktop.background picture-uri 2>/dev/null | sed "s/^\([\"']\)\(.*\)\1\$/\2/g");
    image_list=$(find $wallpaper_dirs -maxdepth 1 -type f -name '*.jpg' -o -name '*.jpeg' 2>/dev/null | sort);
    num_images=$(echo "${image_list}" | wc -l);

    if [ "${num_images}" -lt 2 ]; then
        new_image="${image_list}";
    elif [ "${random_mode}" -eq 1 ]; then
       while true; do
            index=$(($(cat /dev/urandom | tr -dc '0-9' | head -c5 | sed 's/^0*//') % num_images + 1));
            new_image=$(echo "${image_list}" | sed -n "${index}p");
            [ "${cur_image}" != "file://${new_image}" ] && break;
        done
    else
        new_index=$(($(echo "${image_list}" | grep -n "$(echo "${cur_image}" | sed 's/.\+:\/\///')" | cut -d':' -f1 | xargs printf '%d') % num_images + 1));
        new_image=$(echo "${image_list}" | sed -n "${new_index}p");
    fi

    if [ ! -f "${new_image}" ]; then
        echo 'No image found' >&2;
        exit 4;
    fi

    if ! gsettings set org.gnome.desktop.background picture-uri "file://${new_image}" 2>/dev/null; then
        echo "Could not change the wallpaper to ${new_image}" >&2;
        exit 5;
    fi
done

